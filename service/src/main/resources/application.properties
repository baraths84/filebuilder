# End Point of F5 (VIP). It will route requests as per rule
# @visibility public
# @token http://__SERVICE_HOST__:__SERVICE_PORT__
# @scope common
list.customer.service.host=http://__MSPCUSTOMER_HOST__:__PORT__

# MSPCustomer call base path
# @visibility public
# @scope common
# @type STRING
list.customer.service.basepath=/api/customer/v1/lists

# MSPCustomer wishlists call base path
# @visibility public
# @scope common
# @type STRING
wishlist.customer.service.basepath=/api/customer/v2/wishlists

# MSPCustomer user profile v1 call base path
# @visibility public
# @scope common
# @type STRING
user.profile.v1.customer.service.basepath=/api/customer/v1/profile

# MSPCustomer user profile v2 call base path
# @visibility public
# @scope common
# @type STRING
user.profile.v2.customer.service.basepath=/api/customer/v2/profile

# End point of Promotion service
# @visibility public
# @token http://__SERVICE_HOST__:__SERVICE_PORT__
# @scope common
# @type STRING
#GC environment: http://172.17.1.38:8080
list.promotions.service.host=http://__SERVICE_HOST__:__SERVICE_PORT__

# MSPCustomer call base path
# @visibility public
# @scope common
# @type STRING
list.promotions.basepath=/api/order/v3/promotions


# For identification client on resource side
# @visibility  public
# @scope common
list.xapi.service.clientId=list-xAPI

# Flag for field filtering
# @visibility public
# @scope common
# @type BOOLEAN
rest.core.generic.fields.enabled=true

# Flag for logging request and response through rest client
# @visibility public
# @scope environment
# @type BOOLEAN
rest.core.request.id.generation.enabled=true

# Flag for logging request and response through rest client
# @visibility public
# @scope environment
# @type BOOLEAN
default.rest.call.enable.logging=true

# Timeout for waiting to read data after successful connection
# @visibility public
# @scope common
# @type NUMBER
default.rest.call.read.timeout.in.milliseconds=5000

# Timout for making a new connection
# @visibility public
# @scope common
# @type NUMBER
default.rest.call.connection.timeout.in.milliseconds=10000

# Max thread pool size per rest client instance
# @visibility public
# @scope common
# @type NUMBER
default.rest.client.fixed.thread.pool.size=100

#--------- Hystrix default configuration override for the whole application -------------------------#
# Hystrix configuration reference: https://github.com/Netflix/Hystrix/wiki/Configuration for details
# Hystrix timeout value
# @visibility public
# @scope common
# @type NUMBER
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10200

# Hystrix thread pool size
# @visibility public
# @scope common
# @type NUMBER
hystrix.threadpool.default.coreSize=100

# Hystrix queue size for the threadpool
# @visibility public
# @scope common
# @type NUMBER
hystrix.threadpool.default.maxQueueSize=0

# Hystrix queue size rejection threshold
# @visibility public
# @scope common
# @type NUMBER
hystrix.threadpool.default.queueSizeRejectionThreshold=100
#----------------------------------------------------------------------------------------------------#


# Configures Rest Core base path
# @visibility public
# @scope common
rest.core.base.path=/xapi/

# Log file path location to generate application log
# @visibility public
# @scope instance
# @type STRING
logging.path=/www/logs/

# Log file name
# @visibility public
# @scope common
# @type STRING
logging.file.main.name=app-xapi.log

# Configures Rest Core base path
# @visibility public
# @scope common
logging.level.root=INFO
logging.level.org.apache.http=INFO

#logging.file.main.rollingPolicy.maxIndex=10
#logging.file.main.triggeringPolicy.maxFileSize=75MB
#logging.console.level.root=OFF
#logging.level.org.springframework=ERROR
#logging.level.org.springframework.boot.autoconfigure=ERROR
#logging.level.org.apache.http=ERROR

# End point of FCC service
# @visibility public
# @token http://__SERVICE_HOST__:__SERVICE_PORT__
# @scope common
# @type STRING
fcc.service.host=http://__FCC_HOST__:_PORT__

# FCC UPC call base path
# @visibility public
# @scope common
# @type STRING
fcc.catalog.basepath=/api/catalog/v2

# End point of Wishlist service
# @visibility public
# @token http://__SERVICE_HOST__:__SERVICE_PORT__
# @scope common
# @type STRING
wishlist.service.host=http://__MSPWISHLIST_HOST__:__PORT__


# MSP Wishlist call base path
# @visibility public
# @scope common
# @type STRING
wishlist.service.basepath=/api/selection/list/v1

# MSP Wishlist service enabled
# @visibility public
# @scope common
# @type BOOLEAN
wishlist.enabled = false

# Security token switch
# if set to true - wishlist xapi will
# pass the security token to downstream
# services
# @visibility public
# @scope common
# @type STRING
ALLOW_SECURITY_TOKEN=false

# max number of items allowed for promotions
# services
# @visibility public
# @scope common
# @type INTEGER
MAX_ITEMS_TO_PROCESS_FOR_PROMOTIONS=50

################################### DKS Properties #############################################
# This property would be used to control the overwrite of the killswitch.json file in dev mode.
# If the value is set to "false", it would not overwrite the file, hence allow the developer to retain the manually changed values of kill switches
# in killswitch.properies file even after taking a code update or after going to a higher version of DKSSwitches artifact.
# @visibility public
# @scope common
# @type BOOLEAN
local_killswitch_overwrite_in_dev_mode_enabled=false

# Location where kill switch values would be extracted locally while starting up the client application
# Directory should have write permission.
# Eg: /www/apps/mcom/properties
# @visibility public
# @scope common
# @token __ZK_LOCAL_PATH__
# @type STRING
local_killswitch_storage_location=/tmp/properties/

# This property would be used if the "zookeeper_enabled" value is set to "true".
# Value for this property would be in the following format : /{channel}/{application}
# @visibility public
# @scope common
# @type STRING
local_killswitch_tree_path=/mcom/wishlistxapi

# This property is used to facilitate the Dev environment to start without zookeeper server.
# Value of this property should be "true" for qualified environment and "false" for dev/standalone mode
# @visibility public
# @scope environment
# @type BOOLEAN
# @environment.value.prod true
zookeeper_enabled=false

# This property would be used if the "zookeeper_enabled" value is set to "true".
# Value for this property would be in the following format : /{channel}/{release}/{environment}/{application}
# @visibility public
# @scope common
# @token __ZK_ZNODE_PATH__/wishlistxapi
# @type STRING
zookeeper_killswitch_tree_path=/mcom/17ZA/dev/wishlistxapi

# Indicates whether killswitch.properies file would be created locally as a backup copy when the application comes up in zookeeper mode.
# If the value is set to "true", it would create killswitch.properties locally as well as update the killswitch.properies file whenever there is any update to the switch value.
# @visibility public
# @scope environment
# @type BOOLEAN
zookeeper_local_storage_enabled=true

# This  property represents all associated zookeeper servers details that are part of the cluster.
# Value of this property would be in format : {ip1:port1},{ip2:port2},{ip3:port3}
# @visibility public
# @scope common
# @token __ZK_SERVERS__
# @type STRING
zookeeper_servers=127.0.0.1:2181
################################### End DKS Properties #########################################

#Sdp grid name. This enables backdoor testing.
# @visibility public
# @scope common
# @token __SDP_GRID__
# @type STRING
sdp.grid=primary

# File name and folder location where zookeeper log files will be stored
# @visibility public
# @scope instance
# @type UNIXPATH
log4j.appender.ZookeeperClient.File=

# base URI of the server
# @visibility public
# @scope environment
rest.core.server.base.uri=

# Application name property to distinguish between MCOM / BCOM. Possible values are MCOM and BCOM
# @visibility public
# @scope common
# @type STRING
# @token __APP_NAME__
application.name=__APP_NAME__

# Property used to enable create invalid user
# @type BOOLEAN
# @visibility private
wishlist.v1.create.invaliduser=true

# Property used to enable wishlist create user
# @type BOOLEAN
# @visibility public
# @scope feature
# @bcomvalue false
wishlist.create.user.enabled=true

# Property used to enable responsive shareEmail
# @type BOOLEAN
# @visibility public
# @scope feature
# @bcomvalue false
responsive.shareemail.enabled=false

# Property used to limit fetch of collaborator lists
# @type NUMBER
# @visibility public
# @scope feature
collaborativeList.limit=1

# Property used to limit search users results
# @type NUMBER
# @visibility public
# @scope feature
customer.find.users.limit=100

# Enables token verifications for protected endpoints
# @visibility private
# @scope feature
msp.wishlist.security.enabled=false